<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <ApplicationIcon>ManagementTool.ico</ApplicationIcon>
        <AssemblyName>octo-cli</AssemblyName>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <OutputType>Exe</OutputType>
        <PackageId>Meshmakers.Octo.Frontend.ManagementTool</PackageId>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PublishProtocol>FileSystem</PublishProtocol>
        <RootNamespace>Meshmakers.Octo.Frontend.ManagementTool</RootNamespace>
        <RuntimeIdentifier Condition="'$([MSBuild]::IsOsPlatform(Linux))'">linux-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="'$([MSBuild]::IsOsPlatform(OSX))'">osx-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="'$([MSBuild]::IsOsPlatform(Windows))'">win-x64</RuntimeIdentifier>
        <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
        <_IsPortable>false</_IsPortable>
        <Configurations>Debug;Release;DebugL</Configurations>
        <Platforms>AnyCPU</Platforms>
        <OutputPath>..\..\bin\$(Configuration)\</OutputPath>
        <NoWarn>1701;1702;CS8002</NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DebugSymbols>false</DebugSymbols>
        <DebugType>None</DebugType>
        <PublishReferencesDocumentationFiles>false</PublishReferencesDocumentationFiles>
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Meshmakers.Common.CommandLineParser" Version="$(MeshmakerVersion)" />
        <PackageReference Include="Meshmakers.Common.Configuration" Version="$(MeshmakerVersion)" />
        <PackageReference Include="Meshmakers.Octo.Sdk.ServiceClient" Version="$(OctoVersion)" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.13.0" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="9.0.7" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.7" />
        <PackageReference Include="NLog.Extensions.Logging" Version="6.0.2" />
    </ItemGroup>

    <ItemGroup>
        <None Update="nlog.config">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Include="..\..\assets\meshmakers64.png">
            <Pack>True</Pack>
            <PackagePath />
            <Link>meshmakers64.png</Link>
        </None>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Commands\Implementations\Asset\" />
      <Folder Include="Commands\Implementations\DevOps\" />
      <Folder Include="Commands\Implementations\General\" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\GraphQlDtos\GraphQlDtos.csproj" />
    </ItemGroup>

    <ItemGroup>
      <!-- Embedded resources for tenant comparison viewer -->
      <EmbeddedResource Include="Commands\Implementations\Bots\TenantComparison\template.html" />
      <EmbeddedResource Include="Commands\Implementations\Bots\TenantComparison\dist\viewer.bundle.js" />
    </ItemGroup>

    <!-- Build the tenant comparison viewer bundle before building the project -->
    <Target Name="BuildComparisonViewer" BeforeTargets="BeforeBuild">
        <PropertyGroup>
            <ComparisonViewerPath>$(MSBuildProjectDirectory)\Commands\Implementations\Bots\TenantComparison</ComparisonViewerPath>
        </PropertyGroup>

        <!-- Check if node_modules exists, if not run npm install -->
        <Exec Command="npm install" WorkingDirectory="$(ComparisonViewerPath)" Condition="!Exists('$(ComparisonViewerPath)\node_modules')" />

        <!-- Build the viewer bundle -->
        <Exec Command="npm run build" WorkingDirectory="$(ComparisonViewerPath)" />
    </Target>
</Project>