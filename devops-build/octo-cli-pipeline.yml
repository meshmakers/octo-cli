name: $(MajorVersion).$(MinorVersion).$(date:yyMM).$(DayOfMonth)$(rev:rrr)-$(Build.SourceBranchName)

trigger:
  batch: true
  branches:
    include:
      - dev/*
      - main
  tags:
    exclude:
      - '*'

variables:
  - group: ApiKeys
  - name: isRelease
    value: ${{ startsWith(variables['Build.SourceBranch'], 'refs/tags/r') }}
  - name: MajorVersion
    value: '0'
  - name: MinorVersion
    value: '0'  
  
pool:
  name: Gerald-Local-Linux
  
steps:
- template: update-build-number.yml
- checkout: self
  clean: true
  submodules: recursive  
- template: set-version.yml
- template: dotnet-publish-to-zip.yml
  parameters:
    exeName: 'octo-cli'
    runtime: 'linux-x64'
    project: 'src/ManagementTool/*.csproj'
- template: dotnet-publish-to-zip.yml
  parameters:
    exeName: 'octo-cli'
    runtime: 'osx-x64'
    project: 'src/ManagementTool/*.csproj'
- template: dotnet-publish-to-zip.yml
  parameters:
    exeName: 'octo-cli'
    runtime: 'win-x64'
    project: 'src/ManagementTool/*.csproj' 
- task: PowerShell@2
  displayName: 'Create versioninfo file'
  inputs:
    targetType: 'inline'
    script: |
      New-Item $(build.artifactstagingdirectory)/versioninfo.txt
      Set-Content $(build.artifactstagingdirectory)/versioninfo.txt $(Build.BuildNumber)
- template: dotnet-create-package.yml
- task: PublishBuildArtifacts@1
  displayName: Publish versioninfo.txt
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)/versioninfo.txt
    ArtifactName: 'octo-cli'
    publishLocation: 'Container'      